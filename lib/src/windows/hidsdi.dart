// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Bindings to `hidsdi.h`.
class HidSdi {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  HidSdi(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  HidSdi.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int HidP_GetCaps(
    ffi.Pointer<PHIDP_PREPARSED_DATA> PreparsedData,
    ffi.Pointer<PHIDP_CAPS> Capabilities,
  ) {
    return _HidP_GetCaps(
      PreparsedData,
      Capabilities,
    );
  }

  late final _HidP_GetCaps_ptr =
      _lookup<ffi.NativeFunction<_c_HidP_GetCaps>>('HidP_GetCaps');
  late final _dart_HidP_GetCaps _HidP_GetCaps =
      _HidP_GetCaps_ptr.asFunction<_dart_HidP_GetCaps>();

  int HidD_GetAttributes(
    ffi.Pointer<ffi.Void> HidDeviceObject,
    ffi.Pointer<PHIDD_ATTRIBUTES> Attributes,
  ) {
    return _HidD_GetAttributes(
      HidDeviceObject,
      Attributes,
    );
  }

  late final _HidD_GetAttributes_ptr =
      _lookup<ffi.NativeFunction<_c_HidD_GetAttributes>>('HidD_GetAttributes');
  late final _dart_HidD_GetAttributes _HidD_GetAttributes =
      _HidD_GetAttributes_ptr.asFunction<_dart_HidD_GetAttributes>();

  int HidD_GetPreparsedData(
    ffi.Pointer<ffi.Void> HidDeviceObject,
    ffi.Pointer<ffi.Pointer<PHIDP_PREPARSED_DATA>> PreparsedData,
  ) {
    return _HidD_GetPreparsedData(
      HidDeviceObject,
      PreparsedData,
    );
  }

  late final _HidD_GetPreparsedData_ptr =
      _lookup<ffi.NativeFunction<_c_HidD_GetPreparsedData>>(
          'HidD_GetPreparsedData');
  late final _dart_HidD_GetPreparsedData _HidD_GetPreparsedData =
      _HidD_GetPreparsedData_ptr.asFunction<_dart_HidD_GetPreparsedData>();

  int HidD_FreePreparsedData(
    ffi.Pointer<PHIDP_PREPARSED_DATA> PreparsedData,
  ) {
    return _HidD_FreePreparsedData(
      PreparsedData,
    );
  }

  late final _HidD_FreePreparsedData_ptr =
      _lookup<ffi.NativeFunction<_c_HidD_FreePreparsedData>>(
          'HidD_FreePreparsedData');
  late final _dart_HidD_FreePreparsedData _HidD_FreePreparsedData =
      _HidD_FreePreparsedData_ptr.asFunction<_dart_HidD_FreePreparsedData>();
}

class PHIDP_PREPARSED_DATA extends ffi.Opaque {}

class PHIDP_CAPS extends ffi.Struct {
  @ffi.Uint16()
  external int Usage;

  @ffi.Uint16()
  external int UsagePage;

  @ffi.Uint16()
  external int InputReportByteLength;

  @ffi.Uint16()
  external int OutputReportByteLength;

  @ffi.Uint16()
  external int FeatureReportByteLength;

  @ffi.Uint16()
  external int _unique_Reserved_item_0;
  @ffi.Uint16()
  external int _unique_Reserved_item_1;
  @ffi.Uint16()
  external int _unique_Reserved_item_2;
  @ffi.Uint16()
  external int _unique_Reserved_item_3;
  @ffi.Uint16()
  external int _unique_Reserved_item_4;
  @ffi.Uint16()
  external int _unique_Reserved_item_5;
  @ffi.Uint16()
  external int _unique_Reserved_item_6;
  @ffi.Uint16()
  external int _unique_Reserved_item_7;
  @ffi.Uint16()
  external int _unique_Reserved_item_8;
  @ffi.Uint16()
  external int _unique_Reserved_item_9;
  @ffi.Uint16()
  external int _unique_Reserved_item_10;
  @ffi.Uint16()
  external int _unique_Reserved_item_11;
  @ffi.Uint16()
  external int _unique_Reserved_item_12;
  @ffi.Uint16()
  external int _unique_Reserved_item_13;
  @ffi.Uint16()
  external int _unique_Reserved_item_14;
  @ffi.Uint16()
  external int _unique_Reserved_item_15;
  @ffi.Uint16()
  external int _unique_Reserved_item_16;

  /// Helper for array `Reserved`.
  ArrayHelper_PHIDP_CAPS_Reserved_level0 get Reserved =>
      ArrayHelper_PHIDP_CAPS_Reserved_level0(this, [17], 0, 0);
  @ffi.Uint16()
  external int NumberLinkCollectionNodes;

  @ffi.Uint16()
  external int NumberInputButtonCaps;

  @ffi.Uint16()
  external int NumberInputValueCaps;

  @ffi.Uint16()
  external int NumberInputDataIndices;

  @ffi.Uint16()
  external int NumberOutputButtonCaps;

  @ffi.Uint16()
  external int NumberOutputValueCaps;

  @ffi.Uint16()
  external int NumberOutputDataIndices;

  @ffi.Uint16()
  external int NumberFeatureButtonCaps;

  @ffi.Uint16()
  external int NumberFeatureValueCaps;

  @ffi.Uint16()
  external int NumberFeatureDataIndices;
}

/// Helper for array `Reserved` in struct `PHIDP_CAPS`.
class ArrayHelper_PHIDP_CAPS_Reserved_level0 {
  final PHIDP_CAPS _struct;
  final List<int> dimensions;
  final int level;
  final int _absoluteIndex;
  int get length => dimensions[level];
  ArrayHelper_PHIDP_CAPS_Reserved_level0(
      this._struct, this.dimensions, this.level, this._absoluteIndex);
  void _checkBounds(int index) {
    if (index >= length || index < 0) {
      throw RangeError(
          'Dimension $level: index not in range 0..$length exclusive.');
    }
  }

  int operator [](int index) {
    _checkBounds(index);
    switch (_absoluteIndex + index) {
      case 0:
        return _struct._unique_Reserved_item_0;
      case 1:
        return _struct._unique_Reserved_item_1;
      case 2:
        return _struct._unique_Reserved_item_2;
      case 3:
        return _struct._unique_Reserved_item_3;
      case 4:
        return _struct._unique_Reserved_item_4;
      case 5:
        return _struct._unique_Reserved_item_5;
      case 6:
        return _struct._unique_Reserved_item_6;
      case 7:
        return _struct._unique_Reserved_item_7;
      case 8:
        return _struct._unique_Reserved_item_8;
      case 9:
        return _struct._unique_Reserved_item_9;
      case 10:
        return _struct._unique_Reserved_item_10;
      case 11:
        return _struct._unique_Reserved_item_11;
      case 12:
        return _struct._unique_Reserved_item_12;
      case 13:
        return _struct._unique_Reserved_item_13;
      case 14:
        return _struct._unique_Reserved_item_14;
      case 15:
        return _struct._unique_Reserved_item_15;
      case 16:
        return _struct._unique_Reserved_item_16;
      default:
        throw Exception('Invalid Array Helper generated.');
    }
  }

  void operator []=(int index, int value) {
    _checkBounds(index);
    switch (_absoluteIndex + index) {
      case 0:
        _struct._unique_Reserved_item_0 = value;
        break;
      case 1:
        _struct._unique_Reserved_item_1 = value;
        break;
      case 2:
        _struct._unique_Reserved_item_2 = value;
        break;
      case 3:
        _struct._unique_Reserved_item_3 = value;
        break;
      case 4:
        _struct._unique_Reserved_item_4 = value;
        break;
      case 5:
        _struct._unique_Reserved_item_5 = value;
        break;
      case 6:
        _struct._unique_Reserved_item_6 = value;
        break;
      case 7:
        _struct._unique_Reserved_item_7 = value;
        break;
      case 8:
        _struct._unique_Reserved_item_8 = value;
        break;
      case 9:
        _struct._unique_Reserved_item_9 = value;
        break;
      case 10:
        _struct._unique_Reserved_item_10 = value;
        break;
      case 11:
        _struct._unique_Reserved_item_11 = value;
        break;
      case 12:
        _struct._unique_Reserved_item_12 = value;
        break;
      case 13:
        _struct._unique_Reserved_item_13 = value;
        break;
      case 14:
        _struct._unique_Reserved_item_14 = value;
        break;
      case 15:
        _struct._unique_Reserved_item_15 = value;
        break;
      case 16:
        _struct._unique_Reserved_item_16 = value;
        break;
      default:
        throw Exception('Invalid Array Helper generated.');
    }
  }
}

class PHIDD_ATTRIBUTES extends ffi.Struct {
  @ffi.Uint32()
  external int Size;

  @ffi.Uint16()
  external int VendorID;

  @ffi.Uint16()
  external int ProductID;

  @ffi.Uint16()
  external int VersionNumber;
}

const int HIDP_STATUS_SUCCESS = 1114112;

typedef _c_HidP_GetCaps = ffi.Int32 Function(
  ffi.Pointer<PHIDP_PREPARSED_DATA> PreparsedData,
  ffi.Pointer<PHIDP_CAPS> Capabilities,
);

typedef _dart_HidP_GetCaps = int Function(
  ffi.Pointer<PHIDP_PREPARSED_DATA> PreparsedData,
  ffi.Pointer<PHIDP_CAPS> Capabilities,
);

typedef _c_HidD_GetAttributes = ffi.Uint8 Function(
  ffi.Pointer<ffi.Void> HidDeviceObject,
  ffi.Pointer<PHIDD_ATTRIBUTES> Attributes,
);

typedef _dart_HidD_GetAttributes = int Function(
  ffi.Pointer<ffi.Void> HidDeviceObject,
  ffi.Pointer<PHIDD_ATTRIBUTES> Attributes,
);

typedef _c_HidD_GetPreparsedData = ffi.Uint8 Function(
  ffi.Pointer<ffi.Void> HidDeviceObject,
  ffi.Pointer<ffi.Pointer<PHIDP_PREPARSED_DATA>> PreparsedData,
);

typedef _dart_HidD_GetPreparsedData = int Function(
  ffi.Pointer<ffi.Void> HidDeviceObject,
  ffi.Pointer<ffi.Pointer<PHIDP_PREPARSED_DATA>> PreparsedData,
);

typedef _c_HidD_FreePreparsedData = ffi.Uint8 Function(
  ffi.Pointer<PHIDP_PREPARSED_DATA> PreparsedData,
);

typedef _dart_HidD_FreePreparsedData = int Function(
  ffi.Pointer<PHIDP_PREPARSED_DATA> PreparsedData,
);
